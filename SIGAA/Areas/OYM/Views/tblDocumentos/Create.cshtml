@model SIGAA.Areas.OYM.Models.tblDocumento

@{
    ViewBag.Title = "Nuevo";
}

<h2>Nuevo</h2>

@using (Html.BeginForm("Create", "tblDocumentos", null, FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Documento</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.dtFechaCreacion_dt)
        <div class="form-group">
            @Html.LabelFor(model => model.lOrigenDocumento_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("lOrigenDocumento_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lOrigenDocumento_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lTipoDocumento_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("lTipoDocumento_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lTipoDocumento_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lTipoProceso_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("lTipoProceso_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lTipoProceso_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sCorrelativo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.sCorrelativo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                @Html.TextBoxFor(model => model.sCorrelativo, new { @class = "form-control", @readonly = "readonly" })
                
                @Html.ValidationMessageFor(model => model.sCorrelativo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sCodigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.sCodigo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                @Html.TextBoxFor(model => model.sCodigo, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.sCodigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lVersion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lVersion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.lVersion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dtValidoDesde_dt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.dtValidoDesde_dt, new { htmlAttributes = new { @class = "form-control" } })*@
                @(Html.Kendo().DatePickerFor(model => model.dtValidoDesde_dt)
                )
                @Html.ValidationMessageFor(model => model.dtValidoDesde_dt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dtUltimaActualizacion_dt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.dtUltimaActualizacion_dt, new { htmlAttributes = new { @class = "form-control" } })*@
                @(Html.Kendo().DatePickerFor(model => model.dtUltimaActualizacion_dt)
                )
                @Html.ValidationMessageFor(model => model.dtUltimaActualizacion_dt, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.NombreArchivo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="file" id="Documento" name="Documentoupload" />                
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.lPlantilla_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("lPlantilla_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lPlantilla_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lDirectorio_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("lDirectorio_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lDirectorio_id, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.lProceso_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("lProceso_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lProceso_id, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.lControlCalidad_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.lControlCalidad_id)
                  .DataTextField("agd_nombres")
                  .DataValueField("id")
                  .HtmlAttributes(new { style = "width:280px", required = "required" })
                  .Filter("contains")                  
                  .AutoBind(false)
                  .MinLength(3)
                  .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("ObtenerResponsables", "tblDocumentos");
                      })
                      .ServerFiltering(true);
                  })
                  .Events(e =>
                    {
                        e.Select("onSelectControlCalidad");
                    })
                )
                @Html.ValidationMessageFor(model => model.lControlCalidad_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Cargo Control de Calidad", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ControlCalidad.DescCargoNivel2, new { @class = "form-control", @readonly = "readonly" })  
                @Html.ValidationMessageFor(model => model.ControlCalidad.DescCargoNivel2, "", new { @class = "text-danger" })                              
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lElaboradoPor_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.lElaboradoPor_id)
                  .DataTextField("agd_nombres")
                  .DataValueField("id")
                  .HtmlAttributes(new { style = "width:280px" })
                  .Filter("contains")
                  .AutoBind(false)
                  .MinLength(3)
                  .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("ObtenerResponsables", "tblDocumentos");
                      })
                      .ServerFiltering(true);
                  })
                  .Events(e =>
                    {
                        e.Select("onSelectElaboradoPor");
                    })
                )
                @Html.ValidationMessageFor(model => model.lElaboradoPor_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Cargo Elaborado Por", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ElaboradoPor.DescCargoNivel2, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ElaboradoPor.DescCargoNivel2, "", new { @class = "text-danger" })                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lRevisadoPor_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.lRevisadoPor_id)
                  .DataTextField("agd_nombres")
                  .DataValueField("id")
                  .HtmlAttributes(new { style = "width:280px" })
                  .Filter("contains")
                  .AutoBind(false)
                  .MinLength(3)
                  .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("ObtenerResponsables", "tblDocumentos");
                      })
                      .ServerFiltering(true);
                  })
                  .Events(e =>
                    {
                        e.Select("onSelectRevisadoPor");
                    })
                )
                @Html.ValidationMessageFor(model => model.lRevisadoPor_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Cargo Revisado Por", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.RevisadoPor.DescCargoNivel2, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.RevisadoPor.DescCargoNivel2, "", new { @class = "text-danger" })                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lAprobadoPor_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.lAprobadoPor_id)
                  .DataTextField("agd_nombres")
                  .DataValueField("id")
                  .HtmlAttributes(new { style = "width:280px" })
                  .Filter("contains")
                  .AutoBind(false)
                  .MinLength(3)
                  .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("ObtenerResponsables", "tblDocumentos");
                      })
                      .ServerFiltering(true);
                  })
                  .Events(e =>
                    {
                        e.Select("onSelectAprobadoPor");
                    })
                )
                @Html.ValidationMessageFor(model => model.lAprobadoPor_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Cargo Aprobado Por", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.AprobadoPor.DescCargoNivel2, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.AprobadoPor.DescCargoNivel2, "", new { @class = "text-danger" })                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sComentarios, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sComentarios, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sComentarios, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lEstado_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("lEstado_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lEstado_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sISO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sISO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sISO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-success" />
                @Html.ActionLink("Cancelar", "Index", new { }, new { @class = "btn btn-warning" })
            </div>
        </div>
    </div>
}


<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-offset-2 col-md-10" id="replacetarget">
        @{ Html.RenderAction("Index", "tblDocumentoRelacionados", new { id = Model.Id }); }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
        kendo.culture("es-ES");

        $(document).ready(function () {
            kendo.culture("es-ES");
            $.validator.addMethod('date',
                function (value, element) {
                    var isValidDate = this.optional(element) || kendo.parseDate(value);

                    return isValidDate
                });
        });

        $(function () {
            $("form").kendoValidator();
        });

        $.validator.setDefaults({ ignore: '' });

        function onSelectControlCalidad(e) {
            var dataItem = this.dataItem(e.item);
            $("#ControlCalidad_DescCargoNivel2").val(dataItem.cargo);
        }

        function onSelectElaboradoPor(e) {
            var dataItem = this.dataItem(e.item);
            $("#ElaboradoPor_DescCargoNivel2").val(dataItem.cargo);
        }

        function onSelectRevisadoPor(e) {
            var dataItem = this.dataItem(e.item);
            $("#RevisadoPor_DescCargoNivel2").val(dataItem.cargo);
        }

        function onSelectAprobadoPor(e) {
            var dataItem = this.dataItem(e.item);
            $("#AprobadoPor_DescCargoNivel2").val(dataItem.cargo);
        }
</script>
}