@using SIGAA.Areas.OYM.Helpers
@model IEnumerable<SIGAA.Areas.OYM.Models.tblDocumento>

@{
    ViewBag.Title = "Documentos";
}

<h2>Documentos</h2>

<div id="content">
    @(Html.Kendo().Grid<SIGAA.Areas.OYM.Models.tblDocumento>()
        .Name("grid")
        .Columns(columns =>
        {
        var menu = "";
        if(FrontUser.TienePermiso(RolesPermisos.OYM_documentos_puedeEditar)){
            menu = menu + "<a class='k-button k-button-icon' href='" + Url.Action("Edit", "tblDocumentos") + "/#=id#' title='Editar'><span class='k-icon k-edit'> </span></a>";
        }
        if (FrontUser.TienePermiso(RolesPermisos.OYM_documentos_puedeVerDetalle))
        {
            menu = menu + "<a class='k-button k-button-icon' href='" + Url.Action("Details", "tblDocumentos") + "/#=id#' title='Ver'><span class='k-icon k-i-search'> </span></a>";
        }
        if (FrontUser.TienePermiso(RolesPermisos.OYM_procesoDocumentos_puedeCrearNuevo))
        {
            menu = menu + "<a class='k-button k-button-icon' href='" + Url.Action("CreateProcess", "tblDocumentoProcesos") + "/#=id#' title='Asignar Proceso'><span class='k-icon k-i-calendar'> </span></a>";
        }
        if (FrontUser.TienePermiso(RolesPermisos.OYM_documentos_puedeEliminar))
        {
            menu = menu + "<a class='k-button k-button-icon' href='" + Url.Action("Delete", "tblDocumentos") + "/#=id#' title='Eliminar'><span class='k-icon k-delete'> </span></a>";
        }
        if (FrontUser.TienePermiso(RolesPermisos.OYM_documentos_puedeDescargarDocumento))
        {
            menu = menu + "<a class='k-button k-button-icon' href='" + Url.Content("~/#=UbicacionArchivo#") + "' target='_blank' title='Descargar documento'><span class='k-icon k-i-seek-s'> </span></a>";
        }
        @*columns.Template(@<text></text>).ClientTemplate(                
        "<a class='k-button k-button-icon' href='" + Url.Action("Edit", "tblDocumentos") + "/#=id#' title='Editar'><span class='k-icon k-edit'> </span></a>" +        
        "<a class='k-button k-button-icon' href='" + Url.Action("Details", "tblDocumentos") + "/#=id#' title='Ver'><span class='k-icon k-i-search'> </span></a>" +
        "<a class='k-button k-button-icon' href='" + Url.Action("CreateProcess", "tblDocumentoProcesos") + "/#=id#' title='Asignar Proceso'><span class='k-icon k-i-calendar'> </span></a>" +
        "<a class='k-button k-button-icon' href='" + Url.Action("Delete", "tblDocumentos") + "/#=id#' title='Eliminar'><span class='k-icon k-delete'> </span></a>" +
        "<a class='k-button k-button-icon' href='" + Url.Content("~/#=UbicacionArchivo#") + "' target='_blank' title='Descargar documento'><span class='k-font-icon k-i-insert-file'> </span></a>"
                                     //"<a class='k-button k-button-icon' href='#=UbicacionArchivo#" + "' target='_blank' title='Descargar documento'><span class='k-font-icon k-i-insert-file'> </span></a>"
                                     )
                                     .Width(180).Title("Edicion").Locked(true);*@

    columns.Template(@<text></text>).ClientTemplate(menu)
                                     .Width(185).Title("Edicion").Locked(true);

            columns.Bound(o => o.sCodigo).ClientTemplate(@Html.ActionLink("#=sCodigo#", "Details", new { ID = "#=Id#" })
            .ToHtmlString()).Width(100).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false))).Locked(true);
            columns.Bound(p => p.Titulo).Width(250).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false))).Locked(true);
            columns.Bound(p => p.OrigenDocumento.sDescripcion).Width(100).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false))).Title("Origen");
            columns.Bound(p => p.dtFechaCreacion_dt).Width(120).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false))).Format("{0:d}");
            columns.Bound(p => p.tblTipoDocumento.sTipoDocumento).Width(150).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
            columns.Bound(p => p.tblTipoProceso.sDescripcion).Width(250).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false))).Title("Tipo Proceso");
            columns.Bound(p => p.sCorrelativo).Width(120).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
            columns.Bound(p => p.lVersion).Width(100).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
            columns.Bound(p => p.dtValidoDesde_dt).Width(120).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false))).Format("{0:d}");
            columns.Bound(p => p.dtUltimaActualizacion_dt).Width(120).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false))).Format("{0:d}");
            columns.Bound(p => p.tblPlantilla.Nombre).Width(150).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false))).Title("Plantilla");
            columns.Bound(p => p.EstadoDocumento.sDescripcion).Width(120).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false))).Title("Estado");

        })
        .ToolBar(toolBar =>
        {
        toolBar.Template(@<text>
        @if (FrontUser.TienePermiso(RolesPermisos.OYM_documentos_puedeCrearNuevo)) {
        <a class="k-button k-button-icontext" href=@Url.Action("Create", "tblDocumentos")><span class="k-icon k-i-plus"></span>Crear Nuevo</a>}
        </text>);
        })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Pageable()
        //.Groupable()
        .Sortable()
        .Filterable()
        .ColumnMenu()
        .Scrollable(s => s.Height("auto"))
        .HtmlAttributes(new { style = "height:100%" })
        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Resizable(rsb => rsb.Columns(true))
        .Reorderable(r => r.Columns(true))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10)
        .Messages(m => m
            .ItemsPerPage("items por página")
            )
        )
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .ServerOperation(false)
            .Sort(p => p.Add("Id").Descending())
        //.Group(group => group.Add(p => p.gatbl_Universidades.sNombre_desc))
        //.Group(group => group.Add(p => p.gatbl_Facultades.sFacultad_nm))
        .Model(model =>
        {
            model.Id(p => p.Id);
            model.Field(p => p.Id).Editable(false);
        })
        .Read(read => read.Action("Index_Read", "tblDocumentos"))
        //.Create(create => create.Action("Create", "tblDocumentos"))
        //.Update(update => update.Action("Edit", "tblDocumentos"))
        //.Destroy(update => update.Action("Delete", "tblDocumentos"))
     )
    )
</div>


@*@(Html.Kendo().ContextMenu()
        .Name("menu")
        .Target("#grid")
        .Orientation(ContextMenuOrientation.Vertical)
        .Animation(animation =>
        {
            animation.Open(open =>
            {
                open.Fade(FadeDirection.In);
                open.Duration(500);
            });
        })
        .Items(items =>
        {

            items.Add()
                 .Text("Nuevo").ImageUrl("~/Content/Web/img/ignore_list_32.png");
            items.Add().Separator(true);
            items.Add()
                 .Text("Editar").ImageUrl("~/Content/Web/img/exam_32.png"); ;
            items.Add()
                 .Text("Ver").ImageUrl("~/Content/Web/img/ignore_list_32.png"); ;
            items.Add()
                 .Text("Eliminar").ImageUrl("~/Content/Web/img/cross_32.png"); ;

        })
)*@




@*<table class="table">
    <tr>
        <th>
            <div class="pull-left">
                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Crear Nuevo", "Create", "tblDocumentos", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
            </div>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.lOrigenDocumento_id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.lTipoDocumento_id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Titulo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.lTipoProceso_id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.sCorrelativo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.sCodigo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.lVersion)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.dtValidoDesde_dt)
        </th>                        
        <th>
            @Html.DisplayNameFor(model => model.lPlantilla_id)
        </th>        
        <th>
            @Html.DisplayNameFor(model => model.lEstado_id)
        </th>                
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td style="width:95px">
                <div class="pull-left" style="width:95px">
                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Editar", "Edit", "tblDocumentos", routeValues: new { id = item.Id }, htmlAttributes: new { data_modal = "", @class = "glyphicon" })
                    &nbsp;
                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-search'></span>", "Ver", "Details", "tblDocumentos", routeValues: new { id = item.Id }, htmlAttributes: new { data_modal = "", @class = "glyphicon" })
                    &nbsp;
                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Eliminar", "Delete", "tblDocumentos", routeValues: new { id = item.Id }, htmlAttributes: new { data_modal = "", @class = "glyphicon" })
                    &nbsp;
                    <a class="glyphicon glyphicon-paperclip" href="~/@item.UbicacionArchivo" title="Descargar documento" target="_blank"></a>
                </div>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrigenDocumento.sDescripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tblTipoDocumento.sTipoDocumento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Titulo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tblTipoProceso.sDescripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.sCorrelativo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.sCodigo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.lVersion)
            </td>  
            <td>
                @Html.DisplayFor(modelItem => item.dtValidoDesde_dt)
            </td>                        
            <td>
                @Html.DisplayFor(modelItem => item.tblPlantilla.Descripcion)
            </td>            
            <td>
                @Html.DisplayFor(modelItem => item.EstadoDocumento.sDescripcion)
            </td>                        
        </tr>
    }

</table>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            resizeContent();

            $(window).resize(function () {
                resizeContent();
            });
        });

        function resizeContent() {
            $height = $(window).height() - 210;
            $('div#content').height($height);

            var grid = $("#grid").data('kendoGrid');
            if (grid != undefined) {
                grid.resize();
            }
        }
    </script>
}