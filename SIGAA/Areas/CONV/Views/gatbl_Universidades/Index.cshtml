@model IEnumerable<SIGAA.Areas.CONV.Models.gatbl_Universidades>

@{
    ViewBag.Title = "Universidades";
}

<h2>Universidades</h2>

<div id="content">
    @(Html.Kendo().Grid<SIGAA.Areas.CONV.Models.gatbl_Universidades>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Template(@<text></text>).ClientTemplate(
                                "<a class='k-button k-button-icon' href='" + Url.Action("Edit", "gatbl_Universidades") + "/#=lUniversidad_id#' title='Editar'><span class='k-icon k-edit'> </span></a>" +
                                 "<a class='k-button k-button-icon' href='" + Url.Action("Details", "gatbl_Universidades") + "/#=lUniversidad_id#' title='Ver'><span class='k-icon k-i-search'> </span></a>" +
                                 "<a class='k-button k-button-icon' href='" + Url.Action("Delete", "gatbl_Universidades") + "/#=lUniversidad_id#' title='Eliminar'><span class='k-icon k-delete'> </span></a>")
                                 .Width(120).Title("Edicion");

        columns.Bound(o => o.sNombre_desc).ClientTemplate(@Html.ActionLink("#=sNombre_desc#", "Details", new { ID = "#=lUniversidad_id#" })
            .ToHtmlString()).Width(150).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
        //columns.Bound(p => p.sNombre_desc).Width(150).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
        //columns.Bound(p => p.OrigenOtraUniversidad).ClientTemplate("#=OrigenOtraUniversidad.sDescripcion#").Width(120);
        //columns.ForeignKey(p => p.sOrigen_fl, (System.Collections.IEnumerable)ViewData["OrigenOtraUniversidad"], "sOrigen_fl", "sDescripcion")
        //.Title("Origen").Width(100).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
        //columns.ForeignKey(p => p.sDepartamento_fl, (System.Collections.IEnumerable)ViewData["Departamento"], "sDepartamento_fl", "sDescripcion")
        //    .Title("Departamento").Width(130).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
        columns.Bound(p => p.OrigenOtraUniversidad.sDescripcion).Width(100).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
        columns.Bound(p => p.Departamento.sDescripcion).Width(130).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
        columns.Bound(p => p.sDireccion_desc).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
        columns.Bound(p => p.sTelefonos_desc).Width(120).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
        columns.Bound(p => p.bInterno).Width(80).ClientTemplate("#= bInterno ? 'SI' : 'NO' #");
        //columns.Bound(p => p.bInterno).ClientTemplate("<input type='checkbox' #= bInterno ? checked='checked' :'' # disabled='disabled' />").Width(80);

        //columns.Command(command => { command.Edit().Text(" ").CancelText(" ").UpdateText(" "); command.Destroy().Text(" "); }).Width(200);



    })
    .ToolBar(toolBar =>
    {
    //toolBar.Create().Text("Crear Nuevo");
    //toolBar.Custom().Text("Crear Nuevo").Name("Create").Action("Create", "gatbl_Universidades").HtmlAttributes(new { @class = "k-button k-i-plus" });
    toolBar.Template(@<text>
        <a class="k-button k-button-icontext" href=@Url.Action("Create", "gatbl_Universidades")><span class="k-icon k-i-plus"></span>Crear Nuevo</a>
    </text>);
    })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    //.Groupable()
    .Sortable()
    .Filterable()
    .ColumnMenu()
    .Scrollable(s => s.Height("auto"))
    .HtmlAttributes(new { style = "height:100%" })
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
    .Resizable(rsb => rsb.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(10)
        .Messages(m => m
            .ItemsPerPage("items por página")
            )
    )
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .ServerOperation(false)
        //.Group(group => group.Add(p => p.OrigenOtraUniversidad.sDescripcion))
        .Model(model =>
        {
            model.Id(p => p.lUniversidad_id);
            model.Field(p => p.lUniversidad_id).Editable(false);
            model.Field(p => p.OrigenOtraUniversidad).DefaultValue(
                ViewData["OrigenOtraUniversidad"] as SIGAA.Areas.CONV.Models.OrigenOtraUniversidad);
        })
        .Read(read => read.Action("Index_Read", "gatbl_Universidades"))
        .Create(create => create.Action("Create", "gatbl_Universidades"))
        .Update(update => update.Action("Edit", "gatbl_Universidades"))
        .Destroy(update => update.Action("Delete", "gatbl_Universidades"))
     )
    )

    @(Html.Kendo().ContextMenu()
        .Name("menu")
        .Target("#grid")
        .Orientation(ContextMenuOrientation.Vertical)
        .Animation(animation =>
        {
            animation.Open(open =>
            {
                open.Fade(FadeDirection.In);
                open.Duration(500);
            });
        })
        .Items(items =>
        {

            items.Add()
                 .Text("Nuevo").ImageUrl("~/Content/Web/img/ignore_list_32.png");
            items.Add().Separator(true);
            items.Add()
                 .Text("Editar").ImageUrl("~/Content/Web/img/exam_32.png"); ;
            items.Add()
                 .Text("Ver").ImageUrl("~/Content/Web/img/ignore_list_32.png"); ;
            items.Add()
                 .Text("Eliminar").ImageUrl("~/Content/Web/img/cross_32.png"); ;

        })
    )
</div>


@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $(document).ready(function () {
        resizeContent();

        $(window).resize(function () {
            resizeContent();
        });
    });

    function resizeContent() {
        $height = $(window).height() - 210;
        $('div#content').height($height);

        var grid = $("#grid").data('kendoGrid');
        if (grid != undefined) {
            grid.resize();
        }
    }

function showDetails(e) {
    e.preventDefault();
    var d = this.dataItem($(e.currentTarget).closest("tr"));
    //alert("Selected item ID is:" + d.Id);
    window.location.href = "@Url.Action("Details", "gatbl_Universidades")/" + d.Id;
}
</script>  
}

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.OrigenOtraUniversidad.sDescripcion)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Departamento.sDescripcion)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.sNombre_desc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.sDireccion_desc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.sTelefonos_desc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.bInterno)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrigenOtraUniversidad.sDescripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Departamento.sDescripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.sNombre_desc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.sDireccion_desc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.sTelefonos_desc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.bInterno)
            </td>
            <td>
                <a href="@Url.Action("Edit", new { id = item.lUniversidad_id })">
                    <i class="glyphicon glyphicon-edit" title="Editar"></i>
                    <span class="sr-only">Editar</span>
                </a>
                <a href="@Url.Action("Details", new { id = item.lUniversidad_id })">
                    <i class="glyphicon glyphicon-search" title="Ver"></i>
                    <span class="sr-only">Ver</span>
                </a>
                <a href="@Url.Action("Delete", new { id = item.lUniversidad_id })">
                    <i class="glyphicon glyphicon-trash" title="Eliminar"></i>
                    <span class="sr-only">Eliminar</span>
                </a>
            </td>
        </tr>
    }

</table>*@