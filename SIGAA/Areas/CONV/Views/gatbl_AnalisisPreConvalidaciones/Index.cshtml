@model IEnumerable<SIGAA.Areas.CONV.Models.gatbl_AnalisisPreConvalidaciones>

@{
    ViewBag.Title = "Analisis de Pre Convalidaciones";
}

<h2>Analisis de Pre Convalidaciones</h2>

<div id="content">
    @(Html.Kendo().Grid<SIGAA.Areas.CONV.Models.gatbl_AnalisisPreConvalidaciones>()
            .Name("grid")
            .Columns(columns =>
            {
            columns.Template(@<text></text>).ClientTemplate(
                                        "<a class='k-button k-button-icon' href='" + Url.Action("Edit", "gatbl_AnalisisPreConvalidaciones") + "/#=lAnalisisPreConvalidacion_id#' title='Editar'><span class='k-icon k-edit'> </span></a>" +
                                         "<a class='k-button k-button-icon' href='" + Url.Action("Details", "gatbl_AnalisisPreConvalidaciones") + "/#=lAnalisisPreConvalidacion_id#' title='Ver'><span class='k-icon k-i-search'> </span></a>" +
                                         "<a class='k-button k-button-icon' href='" + Url.Action("Delete", "gatbl_AnalisisPreConvalidaciones") + "/#=lAnalisisPreConvalidacion_id#' title='Eliminar'><span class='k-icon k-delete'> </span></a>")
                                         .Width(120).Title("Edicion").Locked(true);

                columns.Group(group => group
                    .Title("Solicitud")
                    .Columns(solicitud =>
                    {
                        solicitud.Bound(p => p.gatbl_PConvalidaciones.lNro_solucitud).ClientTemplate(@Html.ActionLink("#=gatbl_PConvalidaciones.lNro_solucitud#", "Details", new { ID = "#=lAnalisisPreConvalidacion_id#" })
                .ToHtmlString()).Width(100).Filterable(ftb => ftb.Cell(cell => cell.Operator("eq").ShowOperators(false)))
                .Title("Nro.");
                        solicitud.Bound(p => p.dtAnalisisConvalidacion_dt).Title("F. Analisis").Width(120).Filterable(ftb => ftb.Cell(cell => cell.ShowOperators(false)))
            .Format("{0:dd/MM/yyyy}");

                    }).Locked(true)
                );

                columns.Group(group => group
                        .Title("Postulante")
                        .Columns(info =>
                        {
                            info.Bound(p => p.gatbl_PConvalidaciones.gatbl_Postulantes.NombreCompleto).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")
                    .ShowOperators(false)));
                            info.Bound(p => p.gatbl_PConvalidaciones.gatbl_Postulantes.sDocumento_nro).Width(120).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")
                    .ShowOperators(false))).Title("Nro. Doc.");
                        })
                    );

                columns.Group(group => group
                    .Title("Origen")
                    .Columns(origen =>
                    {

                        origen.Bound(p => p.gatbl_PConvalidaciones.gatbl_UniversidadesOrigen.sNombre_desc).Width(150).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")
                .ShowOperators(false))).Title("Universidad");
                        origen.Bound(p => p.gatbl_PConvalidaciones.gatbl_CarrerasOrigen.sCarrera_nm).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")
                        .ShowOperators(false))).Title("Carrera");
                    })
                );

                columns.Group(group => group
                    .Title("Destino")
                    .Columns(destino =>
                    {

                        destino.Bound(p => p.gatbl_PConvalidaciones.gatbl_UniversidadesDestino.sNombre_desc).Width(150).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")
                .ShowOperators(false))).Title("Universidad");
                        destino.Bound(p => p.gatbl_PConvalidaciones.gatbl_CarrerasDestino.sCarrera_nm).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")
                        .ShowOperators(false))).Title("Carrera");
                        destino.Bound(p => p.gatbl_PConvalidaciones.Pensum.sDescripcion).Width(100).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")
                        .ShowOperators(false))).Title("Pensum");
                    })
                );

                columns.Bound(p => p.sVersion_nro).Width(100).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false)));
                columns.Bound(p => p.Responsables.NombreCompleto).Width(200).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false))).Title("Responsable");
                columns.Bound(p => p.sObs_desc).Width(250).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")
                .ShowOperators(false)));

            })
            .ToolBar(toolBar =>
            {
            toolBar.Template(@<text>
        <a class="k-button k-button-icontext" href=@Url.Action("Create", "gatbl_AnalisisPreConvalidaciones", new { id = 0 })><span class="k-icon k-i-plus"></span>Crear Nuevo</a>
            </text>);
            })
            .Editable(editable => editable.Mode(GridEditMode.InLine))
            //.Pageable()
            .Groupable()
            .Sortable()
            .Filterable()
            .ColumnMenu()
            .Scrollable(s => s.Height("auto"))
            .HtmlAttributes(new { style = "height:100%" })
            .Filterable(ftb => ftb.Mode(GridFilterMode.Row))

            .Resizable(rsb => rsb.Columns(true))
            .Reorderable(r => r.Columns(true))
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(10)
                .Messages(m => m
                    .ItemsPerPage("items por página")
                    )
            )
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .ServerOperation(false)
        //.Sort(p => p.Add("gatbl_PConvalidaciones.lNro_solucitud").Descending())
        .Group(group => group.AddDescending(p => p.gatbl_PConvalidaciones.lNro_solucitud))
        .Sort(p => p.Add("gatbl_PConvalidaciones.lNro_solucitud").Descending())
        .Model(model =>
        {
            model.Id(p => p.lAnalisisPreConvalidacion_id);
            model.Field(p => p.lAnalisisPreConvalidacion_id).Editable(false);
        })
        .Read(read => read.Action("Index_Read", "gatbl_AnalisisPreConvalidaciones"))
        //.Create(create => create.Action("Create", "gatbl_AnalisisPreConvalidaciones"))
        //.Update(update => update.Action("Edit", "gatbl_AnalisisPreConvalidaciones"))
        //.Destroy(update => update.Action("Delete", "gatbl_AnalisisPreConvalidaciones"))
     )
    )
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            resizeContent();

            $(window).resize(function () {
                resizeContent();
            });
        });

        function resizeContent() {
            $height = $(window).height() - 210;
            $('div#content').height($height);

            var grid = $("#grid").data('kendoGrid');
            if (grid != undefined) {
                grid.resize();
            }
        }
    </script>
}




@*<p>
    @Html.ActionLink("Crear Nuevo", "Create")
</p>
<form action="" class="navbar-form navbar-right">
    <div class="input-group">
        <input type="Search" placeholder="Ingresar aqui para buscar..." class="form-control" />
        <div class="input-group-btn">
            <button class="btn btn-success">
                <span class="glyphicon glyphicon-search"></span>
            </button>
        </div>
    </div>
</form>*@
@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.dtAnalisisConvalidacion_dt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.gatbl_PConvalidaciones.lUniversidadOrigen_id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.gatbl_PConvalidaciones.lCarreraOrigen_id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.gatbl_PConvalidaciones.lUniversidadDestino_id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.gatbl_PConvalidaciones.lCarreraDestino_id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.lResponsable_id)
        </th>        
        <th>
            @Html.DisplayNameFor(model => model.sVersion_nro)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.sObs_desc)
        </th>        
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.dtAnalisisConvalidacion_dt)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.gatbl_PConvalidaciones.gatbl_UniversidadesOrigen.sNombre_desc)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.gatbl_PConvalidaciones.gatbl_CarrerasOrigen.sCarrera_nm)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.gatbl_PConvalidaciones.gatbl_UniversidadesDestino.sNombre_desc)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.gatbl_PConvalidaciones.gatbl_CarrerasDestino.sCarrera_nm)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Responsables.NombreCompleto)
        </td>        
        <td>
            @Html.DisplayFor(modelItem => item.sVersion_nro)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.sObs_desc)
        </td>                
        <td>
            <a href="@Url.Action("Edit", new { id = item.lAnalisisPreConvalidacion_id })">
                <i class="glyphicon glyphicon-edit" title="Editar"></i>
                <span class="sr-only">Editar</span>
            </a>
            <a href="@Url.Action("Details", new { id = item.lAnalisisPreConvalidacion_id })">
                <i class="glyphicon glyphicon-search" title="Ver"></i>
                <span class="sr-only">Ver</span>
            </a>
            <a href="@Url.Action("Delete", new { id = item.lAnalisisPreConvalidacion_id })">
                <i class="glyphicon glyphicon-trash" title="Eliminar"></i>
                <span class="sr-only">Eliminar</span>
            </a>            
        </td>
    </tr>
}

</table>*@
