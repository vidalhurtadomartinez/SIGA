@model SIGAA.Areas.CONV.ViewModels.ConvalidacionExternaViewModels
@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>

@using (Html.BeginForm("Edit", "ConvalidacionExterna", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Convalidacion Externa</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.gatbl_ConvalidacionesExternasPA.lEstudiante_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.gatbl_ConvalidacionesExternasPA.lEstudiante_id)
                  .DataTextField("agd_nombres")
                  .DataValueField("agd_codigo")
                  .HtmlAttributes(new { style = "width:280px" })
                  //.OptionLabel("Buscar Postulante")                  
                  .AutoBind(true)                                    
                  .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("ObtenerPostulantes", "ConvalidacionExterna");
                      })
                      .ServerFiltering(true);
                  })
                  .Events(e =>
                  {
                      e.Select("onSelectPostulante");
                  })
                )

                @*@Html.DropDownList("lEstudiante_id", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.gatbl_ConvalidacionesExternasPA.lEstudiante_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gatbl_ConvalidacionesExternasPA.agenda.alumnos_agenda.crr_codigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gatbl_ConvalidacionesExternasPA.carreras.crr_descripcion, new { htmlAttributes = new { id = "CarreraDesc", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.gatbl_ConvalidacionesExternasPA.carreras.crr_descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gatbl_ConvalidacionesExternasPA.agenda.alumnos_agenda.carreras.sca_codigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gatbl_ConvalidacionesExternasPA.secciones_academicas.sca_descripcion, new { htmlAttributes = new { id = "FacultadDesc", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.gatbl_ConvalidacionesExternasPA.secciones_academicas.sca_descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gatbl_ConvalidacionesExternasPA.dtConvalidacionExterna_dt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DatePickerFor(model => model.gatbl_ConvalidacionesExternasPA.dtConvalidacionExterna_dt)
                )
                @*@Html.EditorFor(model => model.dtConvalidacionExterna_dt, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.gatbl_ConvalidacionesExternasPA.dtConvalidacionExterna_dt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gatbl_ConvalidacionesExternasPA.sFormulario_nro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gatbl_ConvalidacionesExternasPA.sFormulario_nro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gatbl_ConvalidacionesExternasPA.sFormulario_nro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gatbl_ConvalidacionesExternasPA.sInforme_nro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gatbl_ConvalidacionesExternasPA.sInforme_nro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gatbl_ConvalidacionesExternasPA.sInforme_nro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gatbl_ConvalidacionesExternasPA.lResponsable_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.gatbl_ConvalidacionesExternasPA.lResponsable_id)
                  .DataTextField("agd_nombres")
                  .DataValueField("agd_codigo")
                  .HtmlAttributes(new { style = "width:280px" })
                  .Filter("contains")
                  .AutoBind(true)
                  .MinLength(3)
                  .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("ObtenerResponsables", "ConvalidacionExterna");
                      })
                      .ServerFiltering(true);
                  })
                )
                @*@Html.DropDownList("lResponsable_id", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.gatbl_ConvalidacionesExternasPA.lResponsable_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gatbl_ConvalidacionesExternasPA.sObs_desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gatbl_ConvalidacionesExternasPA.sObs_desc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gatbl_ConvalidacionesExternasPA.sObs_desc, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ActionLink("Adicionar Materia", "AdicionarMateria", new { }, new { @class = "btn btn-primary" })
        <input type="submit" value="Guardar Convalidacion" class="btn btn-success" />
        @Html.ActionLink("Cancelar", "Index", new { }, new { @class = "btn btn-warning" })
    </div>
}

<h2>Materias a Convalidar</h2>
<div class="row">
    <div class="col-md-8">
        <h4>Origen</h4>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.gatbl_DConvalidacionExternaPA.lUniversidad_id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.gatbl_DConvalidacionExternaPA.lCarrera_id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.gatbl_MateriaConvalidada.lMateria_id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.gatbl_DConvalidacionExternaPA.lEscalaCalificacion_id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.gatbl_MateriaConvalidada.sNota_Origen)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.gatbl_MateriaConvalidada.sObs_desc)
                </th>
                <th></th>
            </tr>
            @for (int i = 0; i < Model.gatbl_MateriasConvalidadasOrigen.Count; i++)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => Model.gatbl_MateriasConvalidadasOrigen[i].gatbl_DConvalidacionesExternasPA.gatbl_Universidades.sNombre_desc)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.gatbl_MateriasConvalidadasOrigen[i].gatbl_DConvalidacionesExternasPA.gatbl_Carreras.sCarrera_nm)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.gatbl_MateriasConvalidadasOrigen[i].gatbl_ProgramasAnaliticos.sMateria_desc)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.gatbl_MateriasConvalidadasOrigen[i].gatbl_DConvalidacionesExternasPA.gatbl_EscalaCalificaciones.TipoEscalaEvaluacion.sDescripcion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.gatbl_MateriasConvalidadasOrigen[i].sNota_Origen)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.gatbl_MateriasConvalidadasOrigen[i].sObs_desc)
                    </td>
                    <td>
                        @Html.ActionLink("Editar", "EditarMateria", new { id = Model.gatbl_MateriasConvalidadasOrigen[i].lMateriaConvalidada_id }) |
                        @Html.ActionLink("Eliminar", "Delete", new { id = Model.gatbl_MateriasConvalidadasOrigen[i].lMateriaConvalidada_id })
                    </td>
                </tr>
            }

        </table>
    </div>
    <div class="col-md-4">
        <h4>Destino</h4>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.gatbl_MateriaConvalidada.lMateria_id)
                </th>
            </tr>
            @for (int i = 0; i < Model.gatbl_ProgramasAnaliticos.Count; i++)
            {
                <tr class="active">
                    <td>
                        @Html.DisplayFor(modelItem => Model.gatbl_ProgramasAnaliticos[i].sMateria_desc)
                    </td>
                </tr>
            }

        </table>
    </div>

</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        kendo.culture("es-ES");

        $(document).ready(function () {
            kendo.culture("es-ES");
            $.validator.addMethod('date',
                function (value, element) {
                    var isValidDate = this.optional(element) || kendo.parseDate(value);

                    return isValidDate
                });
        });


        function onAdditionalData() {
            return {
                text: $("#productComboBox").text()
            };
        }

        function onSelectPostulante(e) {
            var dataItem = this.dataItem(e.item);
            $("#CarreraDesc").val(dataItem.crr_descripcion);
            $("#FacultadDesc").val(dataItem.sca_descripcion);
        }

        function onSelectCarrera(e) {
            var dataItem = this.dataItem(e.item);
            $("#gatbl_PConvalidaciones_secciones_academicas_sca_descripcion").val(dataItem.sca_descripcion);
        }
    </script>
}

