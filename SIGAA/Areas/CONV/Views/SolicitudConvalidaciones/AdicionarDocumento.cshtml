@model SIGAA.Areas.CONV.Models.gatbl_DPConvalidaciones

@{
    ViewBag.Title = "Adicionar Documento";
}

<h2>Adicionar Documento</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Documentacion para Evaluar</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.lUniversidad_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.lUniversidad_id,
              new SelectList(ViewBag.UniversidadList, "lUniversidad_id", "sNombre_desc"),
              "Seleccionar Universidad",
              new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lUniversidad_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lCarrera_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.lCarrera_id, new SelectList(Enumerable.Empty<SelectListItem>(), "lCarrera_id", "sFacultad_nm"), "Seleccionar Carrera", new { id = "lCarrera_id", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.lCarrera_id, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.sTipoDocumento_fl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("sTipoDocumento_fl", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sTipoDocumento_fl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sTipoPresentacion_fl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("sTipoPresentacion_fl", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sTipoPresentacion_fl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sCantidad_nro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sCantidad_nro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sCantidad_nro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sAprobados_nro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sAprobados_nro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sAprobados_nro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar Documento" class="btn btn-success" />
                @Html.ActionLink("Cancelar", "Create", new { }, new { @class = "btn btn-warning" })                            
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
    $(document).ready(function () {
        //$("#lCarrera_id").prop("disabled", true);
        $("#lUniversidad_id").change(function () {
            var univId = $("#lUniversidad_id").val();
            if (univId != null && univId != undefined && univId != '') {
                var CountryOptions = {};
                CountryOptions.url = '@Url.Action("CarreraList", "SolicitudConvalidaciones")';
                CountryOptions.type = "POST";
                CountryOptions.data = JSON.stringify({ id: univId });
                CountryOptions.datatype = "json";
                CountryOptions.contentType = "application/json";
                CountryOptions.success = function (carreras) {
                    $("#lCarrera_id").empty();
                    $.each(carreras, function (index, val) {
                        $('#lCarrera_id')
                        .append($("<option></option>")
                        .attr("value", val.Value)
                        .text(val.Text));
                    });
                };
                CountryOptions.error = function () { alert("Error al obtener Carreras!!"); };
                $.ajax(CountryOptions);
            }
            else {
                $("#lCarrera_id").empty();
                //$("#lCarrera_id").prop("disabled", true);
            }
        });
    });

</script> 
}